{"ast":null,"code":"var _jsxFileName = \"/Users/esensuyorkulov/Desktop/react/lesson8/src/component/cards/index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = () => {\n  _s();\n  const [posts, setPosts] = useState(null);\n  const {\n    id\n  } = useParams();\n  console.log(useParams());\n  const fetchData = async id => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await res.json();\n    return data;\n  };\n  useEffect(id => {\n    (async () => {\n      const data = await fetchData();\n      setPosts(data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        border: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        children: `Card: ${item.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 20\n        },\n        children: `${item.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        children: `${item.body}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(Post, \"llE01wVNpnPeIR8Zfd5qPELAx2A=\", false, function () {\n  return [useParams, useParams];\n});\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","useParams","Post","posts","setPosts","id","console","log","fetchData","res","fetch","data","json","width","maxWidth","bgcolor","border","fontSize","item","title","body","idx"],"sources":["/Users/esensuyorkulov/Desktop/react/lesson8/src/component/cards/index.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport {useParams} from \"react-router-dom\";\n\nconst Post= () => {\n    const [posts, setPosts] = useState(null)\n    const{id}= useParams()\n    console.log(useParams())\n    const fetchData = async (id)=> {\n      const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      const data = await res.json()\n      return data\n    }\n    useEffect((id)=>{\n      (async()=>{\n        const data = await fetchData()\n        setPosts(data)\n      })()\n    }, [])\n  \n    return (\n      <Card sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper'}} >\n          <CardContent key={idx} sx={{border: 1}} >\n              <Typography sx={{ fontSize: 14 }}>\n                {`Card: ${item.id}`}\n              </Typography>  \n              <Typography sx={{ fontSize: 20 }}>\n                {`${item.title}`}\n              </Typography>  \n              <Typography sx={{ fontSize: 14 }}>\n                {`${item.body}`}\n              </Typography> \n          </CardContent> \n      </Card>\n    )\n  }\n\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,SAAS,QAAO,kBAAkB;AAAC;AAE3C,MAAMC,IAAI,GAAE,MAAM;EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAK;IAACQ;EAAE,CAAC,GAAEJ,SAAS,EAAE;EACtBK,OAAO,CAACC,GAAG,CAACN,SAAS,EAAE,CAAC;EACxB,MAAMO,SAAS,GAAG,MAAOH,EAAE,IAAI;IAC7B,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IACrE,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;IAC7B,OAAOD,IAAI;EACb,CAAC;EACDf,SAAS,CAAES,EAAE,IAAG;IACd,CAAC,YAAS;MACR,MAAMM,IAAI,GAAG,MAAMH,SAAS,EAAE;MAC9BJ,QAAQ,CAACO,IAAI,CAAC;IAChB,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,IAAI;IAAC,EAAE,EAAE;MAAEE,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAkB,CAAE;IAAA,uBACnE,QAAC,WAAW;MAAW,EAAE,EAAE;QAACC,MAAM,EAAE;MAAC,CAAE;MAAA,wBACnC,QAAC,UAAU;QAAC,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAA,UAC7B,SAAQC,IAAI,CAACb,EAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QACR,eACb,QAAC,UAAU;QAAC,EAAE,EAAE;UAAEY,QAAQ,EAAE;QAAG,CAAE;QAAA,UAC7B,GAAEC,IAAI,CAACC,KAAM;MAAC;QAAA;QAAA;QAAA;MAAA,QACL,eACb,QAAC,UAAU;QAAC,EAAE,EAAE;UAAEF,QAAQ,EAAE;QAAG,CAAE;QAAA,UAC7B,GAAEC,IAAI,CAACE,IAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA,GATCC,GAAG;MAAA;MAAA;MAAA;IAAA;EAUP;IAAA;IAAA;IAAA;EAAA,QACX;AAEX,CAAC;AAAA,GA/BGnB,IAAI;EAAA,QAEKD,SAAS,EACRA,SAAS;AAAA;AAAA,KAHnBC,IAAI;AAiCV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}