{"ast":null,"code":"var _jsxFileName = \"/Users/esensuyorkulov/Desktop/react/lesson8/src/component/cards/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostCard = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState([]);\n  useEffect(() => {\n    (async () => {\n      try {\n        const data = await getData();\n        setPost(data[id]);\n      } catch (e) {\n        console.log(e);\n      } finally {}\n    })();\n  }, []);\n  const getData = async () => {\n    const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n    const data = await res.json();\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: '100%',\n      maxWidth: 360,\n      bgcolor: 'background.paper'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        border: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        children: `Card: ${post.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 20\n        },\n        children: `${post.title}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          fontSize: 14\n        },\n        children: `${post.body}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostCard, \"zsKW1hKkVSIe+/7WB5eOWVoUMCM=\", false, function () {\n  return [useParams];\n});\n_c = PostCard;\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useEffect","useState","Card","CardContent","Typography","useParams","PostCard","id","post","setPost","data","getData","e","console","log","res","fetch","json","width","maxWidth","bgcolor","border","fontSize","title","body"],"sources":["/Users/esensuyorkulov/Desktop/react/lesson8/src/component/cards/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport {useParams} from \"react-router-dom\";\n\nconst PostCard= () => {\n    const {id} = useParams()\n    const [post, setPost] = useState([])\n    useEffect(()=>{\n      (async()=>{\n        try{\n            const data = await getData()\n            setPost(data[id])\n        } catch(e){\n            console.log(e)\n        } finally {\n        }\n      })()\n    }, [])\n    const getData = async ()=> {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        const data = await res.json()\n        return data\n      }\n    return (\n        <Card sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper'}} >\n                <CardContent sx={{border: 1}} >\n                    <Typography sx={{ fontSize: 14 }}>\n                        {`Card: ${post.id}`} \n                    </Typography>  \n                    <Typography sx={{ fontSize: 20 }}>\n                        {`${post.title}`}\n                    </Typography>  \n                    <Typography sx={{ fontSize: 14 }}>\n                        {`${post.body}`}\n                    </Typography>     \n                </CardContent> \n           </Card>\n    )\n  }\n\nexport default PostCard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAAQC,SAAS,QAAO,kBAAkB;AAAC;AAE3C,MAAMC,QAAQ,GAAE,MAAM;EAAA;EAClB,MAAM;IAACC;EAAE,CAAC,GAAGF,SAAS,EAAE;EACxB,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,MAAI;IACZ,CAAC,YAAS;MACR,IAAG;QACC,MAAMU,IAAI,GAAG,MAAMC,OAAO,EAAE;QAC5BF,OAAO,CAACC,IAAI,CAACH,EAAE,CAAC,CAAC;MACrB,CAAC,CAAC,OAAMK,CAAC,EAAC;QACNC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAClB,CAAC,SAAS,CACV;IACF,CAAC,GAAG;EACN,CAAC,EAAE,EAAE,CAAC;EACN,MAAMD,OAAO,GAAG,YAAW;IACvB,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAA4C,CAAC;IACrE,MAAMN,IAAI,GAAG,MAAMK,GAAG,CAACE,IAAI,EAAE;IAC7B,OAAOP,IAAI;EACb,CAAC;EACH,oBACI,QAAC,IAAI;IAAC,EAAE,EAAE;MAAEQ,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE,GAAG;MAAEC,OAAO,EAAE;IAAkB,CAAE;IAAA,uBAC/D,QAAC,WAAW;MAAC,EAAE,EAAE;QAACC,MAAM,EAAE;MAAC,CAAE;MAAA,wBACzB,QAAC,UAAU;QAAC,EAAE,EAAE;UAAEC,QAAQ,EAAE;QAAG,CAAE;QAAA,UAC3B,SAAQd,IAAI,CAACD,EAAG;MAAC;QAAA;QAAA;QAAA;MAAA,QACV,eACb,QAAC,UAAU;QAAC,EAAE,EAAE;UAAEe,QAAQ,EAAE;QAAG,CAAE;QAAA,UAC3B,GAAEd,IAAI,CAACe,KAAM;MAAC;QAAA;QAAA;QAAA;MAAA,QACP,eACb,QAAC,UAAU;QAAC,EAAE,EAAE;UAAED,QAAQ,EAAE;QAAG,CAAE;QAAA,UAC3B,GAAEd,IAAI,CAACgB,IAAK;MAAC;QAAA;QAAA;QAAA;MAAA,QACN;IAAA;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACZ;AAEhB,CAAC;AAAA,GAlCGlB,QAAQ;EAAA,QACGD,SAAS;AAAA;AAAA,KADpBC,QAAQ;AAoCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}